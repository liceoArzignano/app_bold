apply plugin: 'com.android.application'
apply plugin: 'realm-android'

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.1"

    //noinspection GroovyMissingReturnStatement
    defaultConfig {
        //noinspection GrDeprecatedAPIUsage
        generatedDensities = []
        applicationId 'it.liceoarzignano.bold'
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0.14"
        vectorDrawables.useSupportLibrary true

        ndk {
            moduleName = 'safe-addon-jni'
        }
    }

    lintOptions.disable 'MissingTranslation'

    aaptOptions.additionalParameters "--no-version-vectors"


    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules_release.pro'
        }
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a', 'x86', 'arm64-v8a'
            universalApk true
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:${androidSupportVersion}"
    compile "com.android.support:design:${androidSupportVersion}"
    compile "com.android.support:cardview-v7:${androidSupportVersion}"
    compile "com.android.support:customtabs:${androidSupportVersion}"
    compile "com.google.android.gms:play-services-analytics:${googlePlayServicesVersion}"
    compile "com.google.android.gms:play-services-drive:${googlePlayServicesVersion}"
    compile 'io.realm:android-adapters:1.3.0'
    compile 'uk.co.samuelwall:material-tap-target-prompt:1.2.0'
    compile('com.github.afollestad.material-dialogs:core:0.9.0.1@aar') { transitive = true }
}

import com.android.build.OutputFile

ext.versionCodes = ['armeabi-v7a':1, x86:2, 'arm64-v8a':3]

android.applicationVariants.all { variant ->
    // assign different version code for each output
    variant.outputs.each { output ->
        int abiVersionCode = project.ext.versionCodes.get(output.getFilter(OutputFile.ABI)) ?: 0
        output.versionCodeOverride = (abiVersionCode * 1000) + android.defaultConfig.versionCode
    }
}
